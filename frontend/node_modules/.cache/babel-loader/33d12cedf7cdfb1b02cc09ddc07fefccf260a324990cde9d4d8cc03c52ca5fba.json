{"ast":null,"code":"// utils/auth.js\nconst TOKEN_KEY = 'consultancy_token';\nconst USER_KEY = 'consultancy_user';\nexport const getToken = () => {\n  return localStorage.getItem(TOKEN_KEY);\n};\nexport const setToken = token => {\n  localStorage.setItem(TOKEN_KEY, token);\n};\nexport const removeToken = () => {\n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem(USER_KEY);\n};\nexport const getUser = () => {\n  const user = localStorage.getItem(USER_KEY);\n  return user ? JSON.parse(user) : null;\n};\nexport const setUser = user => {\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\n};\nexport const isAuthenticated = () => {\n  const token = getToken();\n  if (!token) return false;\n\n  // Check if token is expired (basic check)\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const isExpired = payload.exp * 1000 < Date.now();\n    if (isExpired) {\n      removeToken();\n      return false;\n    }\n    return true;\n  } catch (error) {\n    removeToken();\n    return false;\n  }\n};\nexport const logout = () => {\n  removeToken();\n  window.location.href = '/login';\n};","map":{"version":3,"names":["TOKEN_KEY","USER_KEY","getToken","localStorage","getItem","setToken","token","setItem","removeToken","removeItem","getUser","user","JSON","parse","setUser","stringify","isAuthenticated","payload","atob","split","isExpired","exp","Date","now","error","logout","window","location","href"],"sources":["C:/Users/shiva/OneDrive/Documents/consultancy-resume-system/frontend/src/utils/auth.js"],"sourcesContent":["// utils/auth.js\r\nconst TOKEN_KEY = 'consultancy_token';\r\nconst USER_KEY = 'consultancy_user';\r\n\r\nexport const getToken = () => {\r\n  return localStorage.getItem(TOKEN_KEY);\r\n};\r\n\r\nexport const setToken = (token) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n};\r\n\r\nexport const removeToken = () => {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem(USER_KEY);\r\n};\r\n\r\nexport const getUser = () => {\r\n  const user = localStorage.getItem(USER_KEY);\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\nexport const setUser = (user) => {\r\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  const token = getToken();\r\n  if (!token) return false;\r\n  \r\n  // Check if token is expired (basic check)\r\n  try {\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    const isExpired = payload.exp * 1000 < Date.now();\r\n    \r\n    if (isExpired) {\r\n      removeToken();\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    removeToken();\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  removeToken();\r\n  window.location.href = '/login';\r\n};"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAG,mBAAmB;AACrC,MAAMC,QAAQ,GAAG,kBAAkB;AAEnC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAOC,YAAY,CAACC,OAAO,CAACJ,SAAS,CAAC;AACxC,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAIC,KAAK,IAAK;EACjCH,YAAY,CAACI,OAAO,CAACP,SAAS,EAAEM,KAAK,CAAC;AACxC,CAAC;AAED,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAM;EAC/BL,YAAY,CAACM,UAAU,CAACT,SAAS,CAAC;EAClCG,YAAY,CAACM,UAAU,CAACR,QAAQ,CAAC;AACnC,CAAC;AAED,OAAO,MAAMS,OAAO,GAAGA,CAAA,KAAM;EAC3B,MAAMC,IAAI,GAAGR,YAAY,CAACC,OAAO,CAACH,QAAQ,CAAC;EAC3C,OAAOU,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,GAAG,IAAI;AACvC,CAAC;AAED,OAAO,MAAMG,OAAO,GAAIH,IAAI,IAAK;EAC/BR,YAAY,CAACI,OAAO,CAACN,QAAQ,EAAEW,IAAI,CAACG,SAAS,CAACJ,IAAI,CAAC,CAAC;AACtD,CAAC;AAED,OAAO,MAAMK,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMV,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACI,KAAK,EAAE,OAAO,KAAK;;EAExB;EACA,IAAI;IACF,MAAMW,OAAO,GAAGL,IAAI,CAACC,KAAK,CAACK,IAAI,CAACZ,KAAK,CAACa,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMC,SAAS,GAAGH,OAAO,CAACI,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAEjD,IAAIH,SAAS,EAAE;MACbZ,WAAW,CAAC,CAAC;MACb,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACdhB,WAAW,CAAC,CAAC;IACb,OAAO,KAAK;EACd;AACF,CAAC;AAED,OAAO,MAAMiB,MAAM,GAAGA,CAAA,KAAM;EAC1BjB,WAAW,CAAC,CAAC;EACbkB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}